version: '3.8'

services:
  api:
    build:
      context: ..
      dockerfile: backend/Dockerfile
      target: builder
    ports:
      - "3000:3000"
      - "9229:9229" # Debug port
    volumes:
      - ./:/app
      - ../shared:/app/shared
      - /app/node_modules
      - /app/shared/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/flexibill
      - PLAID_CLIENT_ID=${PLAID_CLIENT_ID}
      - PLAID_SECRET=${PLAID_SECRET}
      - PLAID_ENVIRONMENT=${PLAID_ENVIRONMENT}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_DEPLOYMENT=${AZURE_OPENAI_DEPLOYMENT}
      - JWT_SECRET=${JWT_SECRET}
    command: npm run dev
    depends_on:
      - db
      - redis
    networks:
      - flexibill-network

  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=flexibill
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/initSchema.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - flexibill-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - flexibill-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - flexibill-network

volumes:
  postgres-data:
  redis-data:

networks:
  flexibill-network:
    driver: bridge